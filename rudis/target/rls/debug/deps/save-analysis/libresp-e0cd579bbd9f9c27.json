{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b","program":"/Users/mac1094/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","resp","/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=e0cd579bbd9f9c27","-C","extra-filename=-e0cd579bbd9f9c27","--out-dir","/Users/mac1094/rust/rudis/target/rls/debug/deps","-L","dependency=/Users/mac1094/rust/rudis/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/mac1094/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/mac1094/rust/rudis/target/rls/debug/deps/libresp-e0cd579bbd9f9c27.rmeta"},"prelude":{"crate_id":{"name":"resp","disambiguator":[594046614810735306,13663992952020879792]},"crate_root":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src","external_crates":[{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}}],"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":0,"byte_end":536,"line_start":1,"line_end":14,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":445,"byte_end":450,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":478,"byte_end":484,"line_start":11,"line_end":11,"column_start":27,"column_end":33},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":486,"byte_end":498,"line_start":11,"line_end":11,"column_start":35,"column_end":47},"alias_span":null,"name":"encode_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":500,"byte_end":507,"line_start":11,"line_end":11,"column_start":49,"column_end":56},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":0,"byte_end":536,"line_start":1,"line_end":14,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":56}],"decl_id":null,"docs":" RESP(Redis Serialization Protocol) Serialization for Rust.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ RESP(Redis Serialization Protocol) Serialization for Rust.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/lib.rs","byte_start":360,"byte_end":422,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":105},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":894,"byte_end":898,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Null bulk reply, `$-1\\r\\n`\n","sig":null,"attributes":[{"value":"/ Null bulk reply, `$-1\\r\\n`","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":859,"byte_end":889,"line_start":12,"line_end":12,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":107},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":940,"byte_end":949,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"NullArray","qualname":"::value::Value::NullArray","value":"Value::NullArray","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Null array reply, `*-1\\r\\n`\n","sig":null,"attributes":[{"value":"/ Null array reply, `*-1\\r\\n`","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":904,"byte_end":935,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":109},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1018,"byte_end":1024,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Simple Strings the first byte of the reply is \"+\".\n","sig":null,"attributes":[{"value":"/ For Simple Strings the first byte of the reply is \"+\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":955,"byte_end":1013,"line_start":16,"line_end":16,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":112},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1093,"byte_end":1098,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Error","qualname":"::value::Value::Error","value":"Value::Error(String)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Errors the first byte of the reply is \"-\".\n","sig":null,"attributes":[{"value":"/ For Errors the first byte of the reply is \"-\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1038,"byte_end":1088,"line_start":18,"line_end":18,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":115},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1169,"byte_end":1176,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Integers the first byte of the reply is \":\".\n","sig":null,"attributes":[{"value":"/ For Integers the first byte of the reply is \":\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1112,"byte_end":1164,"line_start":20,"line_end":20,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":118},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1248,"byte_end":1252,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Bulk","qualname":"::value::Value::Bulk","value":"Value::Bulk(String)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Bulk Strings the first byte of the reply is \"$\".\n","sig":null,"attributes":[{"value":"/ For Bulk Strings the first byte of the reply is \"$\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1187,"byte_end":1243,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":121},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1336,"byte_end":1343,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"BufBulk","qualname":"::value::Value::BufBulk","value":"Value::BufBulk(Vec<u8>)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Bulk <binary> Strings the first byte of the reply is \"$\".\n","sig":null,"attributes":[{"value":"/ For Bulk <binary> Strings the first byte of the reply is \"$\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1266,"byte_end":1331,"line_start":24,"line_end":24,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":124},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1413,"byte_end":1418,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Vec<Value>)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" For Arrays the first byte of the reply is \"*\".\n","sig":null,"attributes":[{"value":"/ For Arrays the first byte of the reply is \"*\".","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1358,"byte_end":1408,"line_start":26,"line_end":26,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":104},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":847,"byte_end":852,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n    Null,\n    NullArray,\n    String(String),\n    Error(String),\n    Integer(i64),\n    Bulk(String),\n    BufBulk(Vec<u8>),\n    Array(Vec<Value>),\n}","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124}],"decl_id":null,"docs":" Represents a RESP value, see [Redis Protocol specification](http://redis.io/topics/protocol).\n","sig":null,"attributes":[{"value":"/ Represents a RESP value, see [Redis Protocol specification](http://redis.io/topics/protocol).","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":701,"byte_end":798,"line_start":9,"line_end":9,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1789,"byte_end":1796,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Value>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value is a `Null` or `NullArray`. Returns `false` otherwise.\n # Examples\n ```\n # use self::resp::{Value};\n assert_eq!(Value::Null.is_null(), true);\n assert_eq!(Value::NullArray.is_null(), true);\n assert_eq!(Value::Integer(123).is_null(), false);\n ```\n","sig":null,"attributes":[{"value":"/ Returns `true` if the value is a `Null` or `NullArray`. Returns `false` otherwise.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1452,"byte_end":1538,"line_start":31,"line_end":31,"column_start":5,"column_end":91}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1543,"byte_end":1557,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1562,"byte_end":1569,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ # use self::resp::{Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1574,"byte_end":1604,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Value::Null.is_null(), true);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1609,"byte_end":1653,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Value::NullArray.is_null(), true);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1658,"byte_end":1707,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Value::Integer(123).is_null(), false);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1712,"byte_end":1765,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1770,"byte_end":1777,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2213,"byte_end":2221,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Value>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value is a `Error`. Returns `false` otherwise.\n # Examples\n ```\n # use self::resp::{Value};\n assert_eq!(Value::Null.is_error(), false);\n assert_eq!(Value::Error(\"\".to_string()).is_error(), true);\n ```\n","sig":null,"attributes":[{"value":"/ Returns `true` if the value is a `Error`. Returns `false` otherwise.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1933,"byte_end":2005,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2010,"byte_end":2024,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2029,"byte_end":2036,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use self::resp::{Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2041,"byte_end":2071,"line_start":49,"line_end":49,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Value::Null.is_error(), false);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2076,"byte_end":2122,"line_start":50,"line_end":50,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Value::Error(\"\".to_string()).is_error(), true);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2127,"byte_end":2189,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2194,"byte_end":2201,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2605,"byte_end":2611,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"encode","qualname":"<Value>::encode","value":"pub fn encode(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode the value to RESP binary buffer.\n # Examples\n ```\n # use self::resp::{Value};\n let val = Value::String(\"OK正\".to_string());\n assert_eq!(val.encode(), vec![43, 79, 75, 230, 173, 163, 13, 10]);\n ```\n","sig":null,"attributes":[{"value":"/ Encode the value to RESP binary buffer.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2343,"byte_end":2386,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2391,"byte_end":2405,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2410,"byte_end":2417,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use self::resp::{Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2422,"byte_end":2452,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/ let val = Value::String(\"OK正\".to_string());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2457,"byte_end":2506,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(val.encode(), vec![43, 79, 75, 230, 173, 163, 13, 10]);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2511,"byte_end":2581,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2586,"byte_end":2593,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2912,"byte_end":2929,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"to_encoded_string","qualname":"<Value>::to_encoded_string","value":"pub fn to_encoded_string(&Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Encode the value to RESP string.\n # Examples\n ```\n # use self::resp::{Value};\n let val = Value::String(\"OK正\".to_string());\n assert_eq!(val.to_encoded_string().unwrap(), \"+OK正\\r\\n\");\n ```\n","sig":null,"attributes":[{"value":"/ Encode the value to RESP string.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2664,"byte_end":2700,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2705,"byte_end":2719,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2724,"byte_end":2731,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use self::resp::{Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2736,"byte_end":2766,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/ let val = Value::String(\"OK正\".to_string());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2771,"byte_end":2820,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(val.to_encoded_string().unwrap(), \"+OK正\\r\\n\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2825,"byte_end":2888,"line_start":76,"line_end":76,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":2893,"byte_end":2900,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5336,"byte_end":5352,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"to_string_pretty","qualname":"<Value>::to_string_pretty","value":"pub fn to_string_pretty(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode the value to beautify formated string.\n # Examples\n ```\n # use self::resp::{Value};\n assert_eq!(Value::Null.to_string_pretty(), \"(Null)\");\n assert_eq!(Value::NullArray.to_string_pretty(), \"(Null Array)\");\n assert_eq!(Value::String(\"OK\".to_string()).to_string_pretty(), \"OK\");\n assert_eq!(Value::Error(\"Err\".to_string()).to_string_pretty(), \"(Error) Err\");\n assert_eq!(Value::Integer(123).to_string_pretty(), \"(Integer) 123\");\n assert_eq!(Value::Bulk(\"Bulk String\".to_string()).to_string_pretty(), \"\\\"Bulk String\\\"\");\n assert_eq!(Value::BufBulk(vec![]).to_string_pretty(), \"(Empty Buffer)\");\n assert_eq!(Value::BufBulk(vec![0, 100]).to_string_pretty(), \"(Buffer) 00 64\");\n assert_eq!(Value::Array(vec![]).to_string_pretty(), \"(Empty Array)\");\n ```","sig":null,"attributes":[{"value":"/ Encode the value to beautify formated string.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3091,"byte_end":3140,"line_start":83,"line_end":83,"column_start":5,"column_end":54}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3145,"byte_end":3159,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3164,"byte_end":3171,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use self::resp::{Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3176,"byte_end":3206,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Value::Null.to_string_pretty(), \"(Null)\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3211,"byte_end":3268,"line_start":87,"line_end":87,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Value::NullArray.to_string_pretty(), \"(Null Array)\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3273,"byte_end":3341,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Value::String(\"OK\".to_string()).to_string_pretty(), \"OK\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3346,"byte_end":3419,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Value::Error(\"Err\".to_string()).to_string_pretty(), \"(Error) Err\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3424,"byte_end":3506,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Value::Integer(123).to_string_pretty(), \"(Integer) 123\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3511,"byte_end":3583,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Value::Bulk(\"Bulk String\".to_string()).to_string_pretty(), \"\\\"Bulk String\\\"\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3588,"byte_end":3681,"line_start":92,"line_end":92,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(Value::BufBulk(vec![]).to_string_pretty(), \"(Empty Buffer)\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3686,"byte_end":3762,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Value::BufBulk(vec![0, 100]).to_string_pretty(), \"(Buffer) 00 64\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3767,"byte_end":3849,"line_start":94,"line_end":94,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Value::Array(vec![]).to_string_pretty(), \"(Empty Array)\");","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3854,"byte_end":3927,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3932,"byte_end":3939,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3944,"byte_end":3947,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ A full formated example:","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3952,"byte_end":3980,"line_start":98,"line_end":98,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3985,"byte_end":3988,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```bash","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":3993,"byte_end":4004,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/  1) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4009,"byte_end":4023,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/  2) (Null Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4028,"byte_end":4048,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/  3) OK","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4053,"byte_end":4063,"line_start":103,"line_end":103,"column_start":5,"column_end":15}},{"value":"/  4) (Error) Err","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4068,"byte_end":4087,"line_start":104,"line_end":104,"column_start":5,"column_end":24}},{"value":"/  5) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4092,"byte_end":4113,"line_start":105,"line_end":105,"column_start":5,"column_end":26}},{"value":"/  6) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4118,"byte_end":4141,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/  7) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4146,"byte_end":4167,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/  8) (Buffer) 00 64","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4172,"byte_end":4194,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/  9) 1) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4199,"byte_end":4223,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     2) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4228,"byte_end":4252,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/     3) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4257,"byte_end":4283,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/ 10) 1) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4288,"byte_end":4305,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/     2) (Null Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4310,"byte_end":4333,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/     3) OK","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4338,"byte_end":4351,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/     4) (Error) Err","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4356,"byte_end":4378,"line_start":115,"line_end":115,"column_start":5,"column_end":27}},{"value":"/     5) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4383,"byte_end":4407,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     6) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4412,"byte_end":4438,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/     7) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4443,"byte_end":4467,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/     8) (Buffer) 00 64","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4472,"byte_end":4497,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/     9) 1) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4502,"byte_end":4529,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/        2) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4534,"byte_end":4561,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/        3) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4566,"byte_end":4595,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/ 11) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4600,"byte_end":4614,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/ 12) 1) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4619,"byte_end":4636,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/     2) (Null Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4641,"byte_end":4664,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/     3) OK","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4669,"byte_end":4682,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/     4) (Error) Err","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4687,"byte_end":4709,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/     5) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4714,"byte_end":4738,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/     6) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4743,"byte_end":4769,"line_start":129,"line_end":129,"column_start":5,"column_end":31}},{"value":"/     7) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4774,"byte_end":4798,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/     8) (Buffer) 00 64","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4803,"byte_end":4828,"line_start":131,"line_end":131,"column_start":5,"column_end":30}},{"value":"/     9) 1) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4833,"byte_end":4860,"line_start":132,"line_end":132,"column_start":5,"column_end":32}},{"value":"/        2) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4865,"byte_end":4892,"line_start":133,"line_end":133,"column_start":5,"column_end":32}},{"value":"/        3) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4897,"byte_end":4926,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/    10) 1) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4931,"byte_end":4951,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/        2) (Null Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4956,"byte_end":4982,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/        3) OK","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":4987,"byte_end":5003,"line_start":137,"line_end":137,"column_start":5,"column_end":21}},{"value":"/        4) (Error) Err","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5008,"byte_end":5033,"line_start":138,"line_end":138,"column_start":5,"column_end":30}},{"value":"/        5) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5038,"byte_end":5065,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/        6) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5070,"byte_end":5099,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/        7) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5104,"byte_end":5131,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/        8) (Buffer) 00 64","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5136,"byte_end":5164,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/        9) 1) (Empty Array)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5169,"byte_end":5199,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/           2) (Integer) 123","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5204,"byte_end":5234,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/           3) \\\"Bulk String\\\"","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5239,"byte_end":5271,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/    11) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5276,"byte_end":5293,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/ 13) (Null)","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5298,"byte_end":5312,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":5317,"byte_end":5324,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6396,"byte_end":6414,"line_start":174,"line_end":174,"column_start":12,"column_end":30},"name":"to_beautify_string","qualname":"<Value>::to_beautify_string","value":"pub fn to_beautify_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" [DEPRECATED] Alias of to_string_pretty.\n","sig":null,"attributes":[{"value":"/ [DEPRECATED] Alias of to_string_pretty.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6341,"byte_end":6384,"line_start":173,"line_end":173,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15270,"byte_end":15276,"line_start":22,"line_end":22,"column_start":8,"column_end":14},"name":"encode","qualname":"::serialize::encode","value":"pub fn encode(&Value) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encodes RESP value to RESP binary buffer.\n # Examples\n ```\n # use self::resp::{Value, encode};\n let val = Value::String(\"OK\".to_string());\n assert_eq!(encode(&val), vec![43, 79, 75, 13, 10]);\n ```\n","sig":null,"attributes":[{"value":"/ Encodes RESP value to RESP binary buffer.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15044,"byte_end":15089,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15090,"byte_end":15104,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15105,"byte_end":15112,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use self::resp::{Value, encode};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15113,"byte_end":15151,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/ let val = Value::String(\"OK\".to_string());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15152,"byte_end":15198,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(encode(&val), vec![43, 79, 75, 13, 10]);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15199,"byte_end":15254,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15255,"byte_end":15262,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15732,"byte_end":15744,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"encode_slice","qualname":"::serialize::encode_slice","value":"pub fn encode_slice(&[&str]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a slice of string to RESP binary buffer.\n It is use to create a request command on redis client.\n # Examples\n ```\n # use self::resp::encode_slice;\n let array = [\"SET\", \"a\", \"1\"];\n assert_eq!(encode_slice(&array),\n            \"*3\\r\\n$3\\r\\nSET\\r\\n$1\\r\\na\\r\\n$1\\r\\n1\\r\\n\".to_string().into_bytes());\n ```\n","sig":null,"attributes":[{"value":"/ Encodes a slice of string to RESP binary buffer.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15388,"byte_end":15440,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ It is use to create a request command on redis client.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15441,"byte_end":15499,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15500,"byte_end":15514,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15515,"byte_end":15522,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # use self::resp::encode_slice;","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15523,"byte_end":15558,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let array = [\"SET\", \"a\", \"1\"];","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15559,"byte_end":15593,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(encode_slice(&array),","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15594,"byte_end":15630,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/            \"*3\\r\\n$3\\r\\nSET\\r\\n$1\\r\\na\\r\\n$1\\r\\n1\\r\\n\".to_string().into_bytes());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15631,"byte_end":15716,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":15717,"byte_end":15724,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17655,"byte_end":17662,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::serialize::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" A streaming RESP Decoder.\n","sig":null,"attributes":[{"value":"/ A streaming RESP Decoder.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17597,"byte_end":17626,"line_start":93,"line_end":93,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18268,"byte_end":18271,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(&'a mut BufReader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decoder instance with given BufReader for decoding the RESP buffers.\n # Examples\n ```\n # use std::io::BufReader;\n # use self::resp::{Decoder, Value};","sig":null,"attributes":[{"value":"/ Creates a Decoder instance with given BufReader for decoding the RESP buffers.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17772,"byte_end":17854,"line_start":101,"line_end":101,"column_start":5,"column_end":87}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17859,"byte_end":17873,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17878,"byte_end":17885,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ # use std::io::BufReader;","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17890,"byte_end":17919,"line_start":104,"line_end":104,"column_start":5,"column_end":34}},{"value":"/ # use self::resp::{Decoder, Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17924,"byte_end":17963,"line_start":105,"line_end":105,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17968,"byte_end":17971,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let value = Value::Bulk(\"Hello\".to_string());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17976,"byte_end":18025,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ let buf = value.encode();","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18030,"byte_end":18059,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ let mut buf = BufReader::new(buf.as_slice());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18064,"byte_end":18113,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/ let mut decoder = Decoder::new(&mut buf);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18118,"byte_end":18163,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(decoder.decode().unwrap(), Value::Bulk(\"Hello\".to_string()));","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18168,"byte_end":18244,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18249,"byte_end":18256,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":19078,"byte_end":19091,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"with_buf_bulk","qualname":"<Decoder>::with_buf_bulk","value":"pub fn with_buf_bulk(&'a mut BufReader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decoder instance with given BufReader for decoding the RESP buffers.\n The instance will decode bulk value to buffer bulk.\n # Examples\n ```\n # use std::io::BufReader;\n # use self::resp::{Decoder, Value};","sig":null,"attributes":[{"value":"/ Creates a Decoder instance with given BufReader for decoding the RESP buffers.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18408,"byte_end":18490,"line_start":120,"line_end":120,"column_start":5,"column_end":87}},{"value":"/ The instance will decode bulk value to buffer bulk.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18495,"byte_end":18550,"line_start":121,"line_end":121,"column_start":5,"column_end":60}},{"value":"/ # Examples","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18555,"byte_end":18569,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18574,"byte_end":18581,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # use std::io::BufReader;","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18586,"byte_end":18615,"line_start":124,"line_end":124,"column_start":5,"column_end":34}},{"value":"/ # use self::resp::{Decoder, Value};","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18620,"byte_end":18659,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18664,"byte_end":18667,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let value = Value::Bulk(\"Hello\".to_string());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18672,"byte_end":18721,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/ let buf = value.encode();","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18726,"byte_end":18755,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/ let mut buf = BufReader::new(buf.as_slice());","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18760,"byte_end":18809,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let mut decoder = Decoder::with_buf_bulk(&mut buf);","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18814,"byte_end":18869,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ // Always decode \"$\" buffers to Value::BufBulk even if feed Value::Bulk buffers","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18874,"byte_end":18957,"line_start":131,"line_end":131,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(decoder.decode().unwrap(), Value::BufBulk(\"Hello\".to_string().into_bytes()));","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":18962,"byte_end":19054,"line_start":132,"line_end":132,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":19059,"byte_end":19066,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":19311,"byte_end":19317,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode(&mut Self) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" It will read buffers from the inner BufReader, decode it to a Value.\n","sig":null,"attributes":[{"value":"/ It will read buffers from the inner BufReader, decode it to a Value.","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":19227,"byte_end":19299,"line_start":141,"line_end":141,"column_start":5,"column_end":77}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1440,"byte_end":1445,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6496,"byte_end":6501,"line_start":179,"line_end":179,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6526,"byte_end":6531,"line_start":180,"line_end":180,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17751,"byte_end":17758,"line_start":100,"line_end":100,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":1440,"byte_end":1445,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6496,"byte_end":6501,"line_start":179,"line_end":179,"column_start":22,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2844}},{"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/value.rs","byte_start":6526,"byte_end":6531,"line_start":180,"line_end":180,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/mac1094/.cargo/git/checkouts/resp-7a9b6d5216f83d91/b415e0b/src/serialize.rs","byte_start":17751,"byte_end":17758,"line_start":100,"line_end":100,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}}]}